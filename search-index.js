var searchIndex = {};
searchIndex['mongo_driver'] = {"items":[[3,"BsoncError","mongo_driver","",null,null],[3,"InvalidParamsError","","",null,null],[3,"CommandAndFindOptions","","Options to configure both command and find operations.",null,null],[12,"query_flags","","Flags to use",0,null],[12,"skip","","Number of documents to skip, zero to ignore",0,null],[12,"limit","","Max number of documents to return, zero to ignore",0,null],[12,"batch_size","","Number of documents in each batch, zero to ignore (default is 100)",0,null],[12,"fields","","Fields to return, not all commands support this option",0,null],[12,"read_prefs","","Read prefs to use",0,null],[4,"MongoError","","",null,null],[13,"Bsonc","","",1,null],[13,"Decoder","","",1,null],[13,"Encoder","","",1,null],[13,"ValueAccessError","","",1,null],[13,"InvalidParams","","",1,null],[0,"client","","Client to access a MongoDB node, replica set or sharded cluster.",null,null],[3,"ClientPool","mongo_driver::client","Pool that allows usage of clients out of a single pool from multiple threads.",null,null],[3,"SslOptions","","Optional SSL configuration for a `ClientPool`.",null,null],[3,"Client","","Client that provides access to a MongoDB MongoDB node, replica-set, or sharded-cluster.",null,null],[3,"Uri","","Abstraction on top of MongoDB connection URI format.",null,null],[11,"new","","Create a new ClientPool with that can provide clients pointing to the specified uri.\nThe pool will connect via SSL if you add `?ssl=true` to the uri. You can optionally pass\nin SSL options to configure SSL certificate usage and so on.",2,{"inputs":[{"name":"clientpool"},{"name":"uri"},{"name":"option"}],"output":{"name":"clientpool"}}],[11,"get_uri","","Get a reference to this pool's Uri.",2,{"inputs":[{"name":"clientpool"}],"output":{"name":"uri"}}],[11,"pop","","Retrieve a client from the client pool, possibly blocking until one is available.",2,{"inputs":[{"name":"clientpool"}],"output":{"name":"client"}}],[11,"fmt","","",2,{"inputs":[{"name":"clientpool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",2,{"inputs":[{"name":"clientpool"}],"output":null}],[11,"new","","Create a new ssl options instance that can be used to configured\na `ClientPool`.",3,{"inputs":[{"name":"ssloptions"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"bool"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"ssloptions"}],"output":{"name":"ssloptions"}}],[11,"get_collection","","Borrow a collection",4,{"inputs":[{"name":"client"},{"name":"dbt"},{"name":"ct"}],"output":{"name":"collection"}}],[11,"take_collection","","Take a collection, client is owned by the collection so the collection can easily\nbe passed around",4,{"inputs":[{"name":"client"},{"name":"dbt"},{"name":"ct"}],"output":{"name":"collection"}}],[11,"get_database","","Borrow a database",4,{"inputs":[{"name":"client"},{"name":"s"}],"output":{"name":"database"}}],[11,"take_database","","Take a database, client is owned by the database so the database can easily\nbe passed around",4,{"inputs":[{"name":"client"},{"name":"s"}],"output":{"name":"database"}}],[11,"get_server_status","","Queries the server for the current server status, returns a document with this information.",4,{"inputs":[{"name":"client"},{"name":"option"}],"output":{"name":"result"}}],[11,"drop","","",4,{"inputs":[{"name":"client"}],"output":null}],[11,"new","","Parses a string containing a MongoDB style URI connection string.",5,{"inputs":[{"name":"uri"},{"name":"t"}],"output":{"name":"option"}}],[11,"as_str","","",5,{"inputs":[{"name":"uri"}],"output":{"name":"cow"}}],[11,"get_database","","",5,{"inputs":[{"name":"uri"}],"output":{"name":"option"}}],[11,"eq","","",5,{"inputs":[{"name":"uri"},{"name":"uri"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"uri"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"uri"}],"output":{"name":"uri"}}],[11,"drop","","",5,{"inputs":[{"name":"uri"}],"output":null}],[0,"collection","mongo_driver","Access to a MongoDB collection.",null,null],[3,"Collection","mongo_driver::collection","Provides access to a collection for most CRUD operations, I.e. insert, update, delete, find, etc.",null,null],[3,"BulkOperationOptions","","Options to configure a bulk operation.",null,null],[12,"ordered","","If the operations must be performed in order",6,null],[12,"write_concern","","`WriteConcern` to use",6,null],[3,"FindAndModifyOptions","","Options to configure a find and modify operation.",null,null],[12,"sort","","Sort order for the query",7,null],[12,"new","","If the new version of the document should be returned",7,null],[12,"fields","","The fields to return",7,null],[3,"CountOptions","","Options to configure a count operation.",null,null],[12,"query_flags","","The query flags to use",8,null],[12,"skip","","Number of results to skip, zero to ignore",8,null],[12,"limit","","Limit to the number of results, zero to ignore",8,null],[12,"opts","","Optional extra keys to add to the count",8,null],[12,"read_prefs","","Read prefs to use",8,null],[3,"InsertOptions","","Options to configure an insert operation.",null,null],[12,"insert_flags","","Flags to use",9,null],[12,"write_concern","","Write concern to use",9,null],[3,"RemoveOptions","","Options to configure a remove operation.",null,null],[12,"remove_flags","","Flags to use",10,null],[12,"write_concern","","Write concern to use",10,null],[3,"UpdateOptions","","Options to configure an update operation.",null,null],[12,"update_flags","","Flags to use",11,null],[12,"write_concern","","Write concern to use",11,null],[3,"TailOptions","","Options to configure a tailing query.",null,null],[12,"wait_duration","","Duration to wait before checking for new results",12,null],[12,"max_retries","","Maximum number of retries if there is an error",12,null],[3,"BulkOperation","","Provides an abstraction for submitting multiple write operations as a single batch.",null,null],[4,"FindAndModifyOperation","","Possible find and modify operations.",null,null],[13,"Update","","Update the matching documents",13,null],[13,"Upsert","","Upsert the matching documents",13,null],[13,"Remove","","Remove the matching documents",13,null],[11,"default","","Default options that are used if no options are specified\nwhen creating a `BulkOperation`.",6,{"inputs":[{"name":"bulkoperationoptions"}],"output":{"name":"bulkoperationoptions"}}],[11,"default","","Default options used if none are provided.",7,{"inputs":[{"name":"findandmodifyoptions"}],"output":{"name":"findandmodifyoptions"}}],[11,"default","","Default options used if none are provided.",8,{"inputs":[{"name":"countoptions"}],"output":{"name":"countoptions"}}],[11,"default","","Default options used if none are provided.",9,{"inputs":[{"name":"insertoptions"}],"output":{"name":"insertoptions"}}],[11,"default","","Default options used if none are provided.",10,{"inputs":[{"name":"removeoptions"}],"output":{"name":"removeoptions"}}],[11,"default","","Default options used if none are provided.",11,{"inputs":[{"name":"updateoptions"}],"output":{"name":"updateoptions"}}],[11,"default","","Default options used if none are provided.",12,{"inputs":[{"name":"tailoptions"}],"output":{"name":"tailoptions"}}],[11,"command","","Execute a command on the collection.\nThis is performed lazily and therefore requires calling `next` on the resulting cursor.",14,{"inputs":[{"name":"collection"},{"name":"document"},{"name":"option"}],"output":{"name":"result"}}],[11,"command_simple","","Simplified version of `command` that returns the first document immediately.",14,{"inputs":[{"name":"collection"},{"name":"document"},{"name":"option"}],"output":{"name":"result"}}],[11,"count","","Execute a count query on the underlying collection.\nThe `query` bson is not validated, simply passed along to the server. As such, compatibility and errors should be validated in the appropriate server documentation.",14,{"inputs":[{"name":"collection"},{"name":"document"},{"name":"option"}],"output":{"name":"result"}}],[11,"create_bulk_operation","","Create a bulk operation. After creating call various functions such as `update`,\n`insert` and others. When calling `execute` these operations will be executed in\nbatches.",14,{"inputs":[{"name":"collection"},{"name":"option"}],"output":{"name":"bulkoperation"}}],[11,"drop","","Request that a collection be dropped, including all indexes associated with the collection.",14,{"inputs":[{"name":"collection"}],"output":{"name":"result"}}],[11,"find","","Execute a query on the underlying collection.\nIf no options are necessary, query can simply contain a query such as `{a:1}`.\nIf you would like to specify options such as a sort order, the query must be placed inside of `{\"$query\": {}}`\nas specified by the server documentation. See the example below for how to properly specify additional options to query.",14,{"inputs":[{"name":"collection"},{"name":"document"},{"name":"option"}],"output":{"name":"result"}}],[11,"find_and_modify","","Update and return an object.\nThis is a thin wrapper around the findAndModify command. Pass in\nan operation that either updates, upserts or removes.",14,{"inputs":[{"name":"collection"},{"name":"document"},{"name":"findandmodifyoperation"},{"name":"option"}],"output":{"name":"result"}}],[11,"get_name","","Get the name of the collection.",14,{"inputs":[{"name":"collection"}],"output":{"name":"cow"}}],[11,"insert","","Insert document into collection.\nIf no `_id` element is found in document, then an id will be generated locally and added to the document.",14,{"inputs":[{"name":"collection"},{"name":"document"},{"name":"option"}],"output":{"name":"result"}}],[11,"remove","","Remove documents in the given collection that match selector.\nThe bson `selector` is not validated, simply passed along as appropriate to the server. As such, compatibility and errors should be validated in the appropriate server documentation.\n If you want to limit deletes to a single document, add the `SingleRemove` flag.",14,{"inputs":[{"name":"collection"},{"name":"document"},{"name":"option"}],"output":{"name":"result"}}],[11,"save","","Save a document into the collection. If the document has an `_id` field it will be updated.\nOtherwise it will be inserted.",14,{"inputs":[{"name":"collection"},{"name":"document"},{"name":"option"}],"output":{"name":"result"}}],[11,"update","","This function updates documents in collection that match selector.\nBy default, updates only a single document. Add `MultiUpdate` flag to update multiple documents.",14,{"inputs":[{"name":"collection"},{"name":"document"},{"name":"document"},{"name":"option"}],"output":{"name":"result"}}],[11,"tail","","Tails a query",14,{"inputs":[{"name":"collection"},{"name":"document"},{"name":"option"},{"name":"option"}],"output":{"name":"tailingcursor"}}],[11,"drop","","",14,{"inputs":[{"name":"collection"}],"output":null}],[11,"insert","","Queue an insert of a single document into a bulk operation.\nThe insert is not performed until `execute` is called.",15,{"inputs":[{"name":"bulkoperation"},{"name":"document"}],"output":{"name":"result"}}],[11,"remove","","Queue removal of all documents matching the provided selector into a bulk operation.\nThe removal is not performed until `execute` is called.",15,{"inputs":[{"name":"bulkoperation"},{"name":"document"}],"output":{"name":"result"}}],[11,"remove_one","","Queue removal of a single document into a bulk operation.\nThe removal is not performed until `execute` is called.",15,{"inputs":[{"name":"bulkoperation"},{"name":"document"}],"output":{"name":"result"}}],[11,"replace_one","","Queue replacement of a single document into a bulk operation.\nThe replacement is not performed until `execute` is called.",15,{"inputs":[{"name":"bulkoperation"},{"name":"document"},{"name":"document"},{"name":"bool"}],"output":{"name":"result"}}],[11,"update_one","","Queue update of a single documents into a bulk operation.\nThe update is not performed until `execute` is called.",15,{"inputs":[{"name":"bulkoperation"},{"name":"document"},{"name":"document"},{"name":"bool"}],"output":{"name":"result"}}],[11,"update","","Queue update of multiple documents into a bulk operation.\nThe update is not performed until `execute` is called.",15,{"inputs":[{"name":"bulkoperation"},{"name":"document"},{"name":"document"},{"name":"bool"}],"output":{"name":"result"}}],[11,"execute","","This function executes all operations queued into this bulk operation.\nIf ordered was set true, forward progress will be stopped upon the first error.",15,{"inputs":[{"name":"bulkoperation"}],"output":{"name":"result"}}],[11,"drop","","",15,{"inputs":[{"name":"bulkoperation"}],"output":null}],[0,"cursor","mongo_driver","Access to a MongoDB query cursor.",null,null],[3,"Cursor","mongo_driver::cursor","Provides access to a MongoDB cursor for a normal operation.",null,null],[3,"TailingCursor","","Cursor that will reconnect and resume tailing a collection\nat the right point if the connection fails.",null,null],[11,"next","","",16,{"inputs":[{"name":"cursor"}],"output":{"name":"option"}}],[11,"drop","","",16,{"inputs":[{"name":"cursor"}],"output":null}],[11,"next","","",17,{"inputs":[{"name":"tailingcursor"}],"output":{"name":"option"}}],[0,"database","mongo_driver","Access to a MongoDB database.",null,null],[3,"Database","mongo_driver::database","Provides access to a MongoDB database.",null,null],[11,"new","","",18,null],[11,"command","","Execute a command on the database.\nThis is performed lazily and therefore requires calling `next` on the resulting cursor.",18,{"inputs":[{"name":"database"},{"name":"document"},{"name":"option"}],"output":{"name":"result"}}],[11,"command_simple","","Simplified version of `command` that returns the first document immediately.",18,{"inputs":[{"name":"database"},{"name":"document"},{"name":"option"}],"output":{"name":"result"}}],[11,"create_collection","","Create a new collection in this database.",18,{"inputs":[{"name":"database"},{"name":"s"},{"name":"option"}],"output":{"name":"result"}}],[11,"get_collection","","Borrow a collection",18,{"inputs":[{"name":"database"},{"name":"s"}],"output":{"name":"collection"}}],[11,"take_collection","","Take a collection, database is owned by the collection so the collection can easily\nbe passed around",18,{"inputs":[{"name":"database"},{"name":"s"}],"output":{"name":"collection"}}],[11,"get_name","","Get the name of this database.",18,{"inputs":[{"name":"database"}],"output":{"name":"cow"}}],[11,"drop","","",18,{"inputs":[{"name":"database"}],"output":null}],[0,"flags","mongo_driver","Flags to configure various MongoDB operations.",null,null],[3,"Flags","mongo_driver::flags","Structure to hold flags for various flag types",null,null],[4,"InsertFlag","","Flags for insert operations\nSee: http://api.mongodb.org/c/current/mongoc_insert_flags_t.html",null,null],[13,"ContinueOnError","","",19,null],[13,"NoValidate","","",19,null],[4,"QueryFlag","","Flags for query operations\nSee: http://api.mongodb.org/c/current/mongoc_query_flags_t.html",null,null],[13,"TailableCursor","","",20,null],[13,"SlaveOk","","",20,null],[13,"OplogReplay","","",20,null],[13,"NoCursorTimeout","","",20,null],[13,"AwaitData","","",20,null],[13,"Exhaust","","",20,null],[13,"Partial","","",20,null],[4,"RemoveFlag","","Flags for deletion operations\nSee: http://api.mongodb.org/c/1.1.8/mongoc_remove_flags_t.html",null,null],[13,"SingleRemove","","",21,null],[4,"UpdateFlag","","Flags for update operations\nSee: http://api.mongodb.org/c/current/mongoc_update_flags_t.html",null,null],[13,"Upsert","","",22,null],[13,"MultiUpdate","","",22,null],[8,"FlagsValue","","To provide the combined value of all flags.",null,null],[10,"flags","","",23,{"inputs":[{"name":"flagsvalue"}],"output":{"name":"u32"}}],[11,"new","","Creare a new empty flags instance",24,{"inputs":[{"name":"flags"}],"output":{"name":"flags"}}],[11,"add","","Add a flag to this instance",24,{"inputs":[{"name":"flags"},{"name":"t"}],"output":null}],[11,"partial_cmp","","",19,{"inputs":[{"name":"insertflag"},{"name":"insertflag"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"insertflag"},{"name":"insertflag"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"insertflag"},{"name":"insertflag"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"insertflag"},{"name":"insertflag"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"insertflag"},{"name":"insertflag"}],"output":{"name":"bool"}}],[11,"cmp","","",19,{"inputs":[{"name":"insertflag"},{"name":"insertflag"}],"output":{"name":"ordering"}}],[11,"eq","","",19,{"inputs":[{"name":"insertflag"},{"name":"insertflag"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"insertflag"},{"name":"insertflag"}],"output":{"name":"bool"}}],[11,"flags","","",24,{"inputs":[{"name":"flags"}],"output":{"name":"u32"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"queryflag"},{"name":"queryflag"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"queryflag"},{"name":"queryflag"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"queryflag"},{"name":"queryflag"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"queryflag"},{"name":"queryflag"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"queryflag"},{"name":"queryflag"}],"output":{"name":"bool"}}],[11,"cmp","","",20,{"inputs":[{"name":"queryflag"},{"name":"queryflag"}],"output":{"name":"ordering"}}],[11,"eq","","",20,{"inputs":[{"name":"queryflag"},{"name":"queryflag"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"queryflag"},{"name":"queryflag"}],"output":{"name":"bool"}}],[11,"flags","","",24,{"inputs":[{"name":"flags"}],"output":{"name":"u32"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"removeflag"},{"name":"removeflag"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"removeflag"},{"name":"removeflag"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"removeflag"},{"name":"removeflag"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"removeflag"},{"name":"removeflag"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"removeflag"},{"name":"removeflag"}],"output":{"name":"bool"}}],[11,"cmp","","",21,{"inputs":[{"name":"removeflag"},{"name":"removeflag"}],"output":{"name":"ordering"}}],[11,"eq","","",21,{"inputs":[{"name":"removeflag"},{"name":"removeflag"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"removeflag"},{"name":"removeflag"}],"output":{"name":"bool"}}],[11,"flags","","",24,{"inputs":[{"name":"flags"}],"output":{"name":"u32"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"updateflag"},{"name":"updateflag"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"updateflag"},{"name":"updateflag"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"updateflag"},{"name":"updateflag"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"updateflag"},{"name":"updateflag"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"updateflag"},{"name":"updateflag"}],"output":{"name":"bool"}}],[11,"cmp","","",22,{"inputs":[{"name":"updateflag"},{"name":"updateflag"}],"output":{"name":"ordering"}}],[11,"eq","","",22,{"inputs":[{"name":"updateflag"},{"name":"updateflag"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"updateflag"},{"name":"updateflag"}],"output":{"name":"bool"}}],[11,"flags","","",24,{"inputs":[{"name":"flags"}],"output":{"name":"u32"}}],[0,"read_prefs","mongo_driver","Abstraction on top of the MongoDB connection read prefences.",null,null],[3,"ReadPrefs","mongo_driver::read_prefs","Provides an abstraction on top of the MongoDB connection read prefences.",null,null],[4,"ReadMode","","Describes how reads should be dispatched.",null,null],[13,"Primary","","Default mode. All operations read from the current replica set primary.",25,null],[13,"Secondary","","All operations read from among the nearest secondary members of the replica set.",25,null],[13,"PrimaryPreferred","","In most situations, operations read from the primary but if it is unavailable, operations read from secondary members.",25,null],[13,"SecondaryPreferred","","In most situations, operations read from among the nearest secondary members, but if no secondaries are available, operations read from the primary.",25,null],[13,"Nearest","","Operations read from among the nearest members of the replica set, irrespective of the member’s type.",25,null],[11,"new","","Create a new empty read prefs.",26,{"inputs":[{"name":"readprefs"},{"name":"readmode"}],"output":{"name":"readprefs"}}],[11,"default","","Get a new instance of the default read pref.",26,{"inputs":[{"name":"readprefs"}],"output":{"name":"readprefs"}}],[11,"drop","","",26,{"inputs":[{"name":"readprefs"}],"output":null}],[0,"write_concern","mongo_driver","Abstraction on top of the MongoDB connection write concern.",null,null],[3,"WriteConcern","mongo_driver::write_concern","This tells the driver what level of acknowledgment to await from the server.\nThe default, `Default`, is right for the great majority of applications.",null,null],[4,"WriteConcernLevel","","Possible write concern levels, only default is supported at the moment.",null,null],[13,"Default","","By default, writes block awaiting acknowledgment from MongoDB. Acknowledged write concern allows clients to catch network, duplicate key, and other errors.",27,null],[11,"default","","Get the default write concern",28,{"inputs":[{"name":"writeconcern"}],"output":{"name":"writeconcern"}}],[11,"new","","Create a new write concern",28,{"inputs":[{"name":"writeconcern"},{"name":"writeconcernlevel"}],"output":{"name":"writeconcern"}}],[11,"drop","","",28,{"inputs":[{"name":"writeconcern"}],"output":null}],[11,"fmt","mongo_driver","",1,{"inputs":[{"name":"mongoerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"mongoerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"mongoerror"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"mongoerror"}],"output":{"name":"option"}}],[11,"from","","",1,{"inputs":[{"name":"mongoerror"},{"name":"decodererror"}],"output":{"name":"mongoerror"}}],[11,"from","","",1,{"inputs":[{"name":"mongoerror"},{"name":"encodererror"}],"output":{"name":"mongoerror"}}],[11,"from","","",1,{"inputs":[{"name":"mongoerror"},{"name":"valueaccesserror"}],"output":{"name":"mongoerror"}}],[11,"empty","","",29,{"inputs":[{"name":"bsoncerror"}],"output":{"name":"bsoncerror"}}],[11,"is_empty","","",29,{"inputs":[{"name":"bsoncerror"}],"output":{"name":"bool"}}],[11,"domain","","",29,{"inputs":[{"name":"bsoncerror"}],"output":{"name":"mongoerrordomain"}}],[11,"code","","",29,{"inputs":[{"name":"bsoncerror"}],"output":{"name":"mongoerrorcode"}}],[11,"get_message","","",29,{"inputs":[{"name":"bsoncerror"}],"output":{"name":"cow"}}],[11,"mut_inner","","",29,{"inputs":[{"name":"bsoncerror"}],"output":{"name":"bson_error_t"}}],[11,"fmt","","",29,{"inputs":[{"name":"bsoncerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"bsoncerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",29,{"inputs":[{"name":"bsoncerror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"mongoerror"},{"name":"bsoncerror"}],"output":{"name":"mongoerror"}}],[11,"fmt","","",30,{"inputs":[{"name":"invalidparamserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"invalidparamserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"invalidparamserror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"mongoerror"},{"name":"invalidparamserror"}],"output":{"name":"mongoerror"}}],[6,"Result","","",null,null],[11,"default","","Default options used if none are provided.",0,{"inputs":[{"name":"commandandfindoptions"}],"output":{"name":"commandandfindoptions"}}],[11,"with_fields","","",0,{"inputs":[{"name":"commandandfindoptions"},{"name":"document"}],"output":{"name":"commandandfindoptions"}}]],"paths":[[3,"CommandAndFindOptions"],[4,"MongoError"],[3,"ClientPool"],[3,"SslOptions"],[3,"Client"],[3,"Uri"],[3,"BulkOperationOptions"],[3,"FindAndModifyOptions"],[3,"CountOptions"],[3,"InsertOptions"],[3,"RemoveOptions"],[3,"UpdateOptions"],[3,"TailOptions"],[4,"FindAndModifyOperation"],[3,"Collection"],[3,"BulkOperation"],[3,"Cursor"],[3,"TailingCursor"],[3,"Database"],[4,"InsertFlag"],[4,"QueryFlag"],[4,"RemoveFlag"],[4,"UpdateFlag"],[8,"FlagsValue"],[3,"Flags"],[4,"ReadMode"],[3,"ReadPrefs"],[4,"WriteConcernLevel"],[3,"WriteConcern"],[3,"BsoncError"],[3,"InvalidParamsError"]]};
initSearch(searchIndex);
